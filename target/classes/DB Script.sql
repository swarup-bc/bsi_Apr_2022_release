CREATE SCHEMA `bsi` ;

drop table if exists bsi.spreading_transaction_data;
drop table if exists bsi.spreading_summary_data;
drop table if exists bsi.spreading_account_data;
drop table if exists bsi.spreading_master_data;

-- -----------------------------------------------------
-- Table `bsi`.`spreading_master_data`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bsi`.`spreading_master_data` (
  `SMD_ID` INT(11) NOT NULL AUTO_INCREMENT,
  `CUSTOMER_ID` VARCHAR(100) NULL DEFAULT NULL,
  `CASE_ID` VARCHAR(100) NULL DEFAULT NULL,
  `BUSINESS_ID` VARCHAR(100) NULL DEFAULT NULL,
  `REQUESTED_LIMIT` VARCHAR(100) NULL DEFAULT NULL,
  `SE10` VARCHAR(100) NULL DEFAULT NULL,
  `CONTAINER_TYPE` VARCHAR(100) NULL DEFAULT NULL,
  `DATA_SOURCE` VARCHAR(100) NULL DEFAULT NULL,
  `SPREADING_DONE_ON` DATETIME NULL DEFAULT NULL,
  `APPLICATION_ID` VARCHAR(100) NULL DEFAULT NULL,
  CREATED_DATE DATETIME ,
  CREATED_BY VARCHAR(50),
  UPDATED_DATE DATETIME ,
  UPDATED_BY VARCHAR(50),
  PRIMARY KEY (`SMD_ID`))
;


-- -----------------------------------------------------
-- Table `bsi`.`spreading_account_data`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bsi`.`spreading_account_data` (
  `SAD_ID` INT(11) NOT NULL AUTO_INCREMENT,
  `REF_SMD_ID` INT(11) NOT NULL,
  `BUSINESS_UNIT` VARCHAR(100) NULL DEFAULT NULL,
  `ACCOUNT_NUMBER` VARCHAR(100) NULL DEFAULT NULL,
  `ACCOUNT_HOLDER_NAME` VARCHAR(255) NULL DEFAULT NULL,
  `SECONDARY_ACCOUNT_HOLDER_NAME` VARCHAR(255) NULL DEFAULT NULL,
  `ACCOUNT_TYPE` VARCHAR(100) NULL DEFAULT NULL,
  `ACCOUNT_OWNERSHIP` VARCHAR(255) NULL DEFAULT NULL,
  `BANK_NAME` VARCHAR(255) NULL DEFAULT NULL,
  `ROUTING_NO` VARCHAR(100) NULL DEFAULT NULL,
  `CURRENT_BALANCE` DOUBLE NULL DEFAULT NULL,
  `AS_OF_DATE` DATE NULL DEFAULT NULL,
  `TAX_PAYMENT_INDICATOR` VARCHAR(100) NULL DEFAULT NULL,
  `DRAWING_POWER` VARCHAR(100) NULL DEFAULT NULL,
  `TOTAL_COUNT_OF_OVER_UTILIZATION` INT NULL DEFAULT NULL,
  `INTEREST_SERVICING_DAYS` INT NULL DEFAULT NULL,
  `ADDRESS_LINE_1` VARCHAR(255) NULL DEFAULT NULL,
  `ADDRESS_LINE_2` VARCHAR(255) NULL DEFAULT NULL,
  `ADDRESS_LINE_3` VARCHAR(255) NULL DEFAULT NULL,
  `CITY` VARCHAR(100) NULL DEFAULT NULL,
  `STATE` VARCHAR(100) NULL DEFAULT NULL,
  `ZIP` VARCHAR(80) NULL DEFAULT NULL,
  `COUNTRY` VARCHAR(100) NULL DEFAULT NULL,
  `COUNTRY_CODE` VARCHAR(8) NULL DEFAULT NULL,
  CREATED_DATE DATETIME ,
  CREATED_BY VARCHAR(50),
  UPDATED_DATE DATETIME ,
  UPDATED_BY VARCHAR(50),
  PRIMARY KEY (`SAD_ID`),
  CONSTRAINT `spreading_account_data_ibfk_1`
    FOREIGN KEY (`REF_SMD_ID`)
    REFERENCES `bsi`.`spreading_master_data` (`SMD_ID`))
;

CREATE TABLE IF NOT EXISTS `bsi`.`spreading_summary_data` (
  `SSD_ID` INT(11) NOT NULL AUTO_INCREMENT,
  `REF_SAD_ID` INT(11) NOT NULL,
  `START_STATEMENT_DATE` DATE NULL DEFAULT NULL,
  `END_STATEMENT_DATE` DATE NULL DEFAULT NULL,
  `STATEMENT_PERIOD` VARCHAR(10) NULL DEFAULT NULL,
  `CURRENCY_CODE` VARCHAR(8) NULL DEFAULT NULL,
  `UNIT_OF_CURRENCY` VARCHAR(50) NULL DEFAULT NULL,
  `NUMBER_OF_MONTHS` VARCHAR(8) NULL DEFAULT NULL,
  `OPENING_BALANCE` DOUBLE NULL DEFAULT NULL,
  `ENDING_BALANCE` DOUBLE NULL DEFAULT NULL,
  `TOTAL_DOLLAR_DEPOSITS` DOUBLE NULL DEFAULT NULL,
  `TOTAL_NUMBER_DEPOSITS` int NULL DEFAULT NULL,
  `TOTAL_DOLLAR_WITHDRAWALS` DOUBLE NULL DEFAULT NULL,
  `TOTAL_NUMBER_WITHDRAWALS` int NULL DEFAULT NULL,
  `TOTAL_NUMBER_OF_CHECK_RETURNS` int NULL DEFAULT NULL,
  `TOTAL_NUMBER_INWARD_CHECK_RETURN` int NULL DEFAULT NULL,
  `TOTAL_DOLLAR_INWARD_CHECK_RETURN` DOUBLE NULL DEFAULT NULL,
  `TOTAL_NUMBER_OUTWARD_CHECK_RETURN` int NULL DEFAULT NULL,
  `TOTAL_DOLLAR_OUTWARD_CHECK_RETURN` DOUBLE NULL DEFAULT NULL,
  `COUNT_ECS_OR_EMI` DOUBLE NULL DEFAULT NULL,
  `AMOUNT_ECS_OR_EMI` DOUBLE NULL DEFAULT NULL,
  `MINIMUM_BALANCE` DOUBLE NULL DEFAULT NULL,
  `CHECKSUM` DOUBLE NULL DEFAULT NULL,
  CREATED_DATE DATETIME ,
  CREATED_BY VARCHAR(50),
  UPDATED_DATE DATETIME ,
  UPDATED_BY VARCHAR(50),
  PRIMARY KEY (`SSD_ID`),
  CONSTRAINT `spreading_summary_data_ibfk_1`
    FOREIGN KEY (`REF_SAD_ID`)
    REFERENCES `bsi`.`spreading_account_data` (`SAD_ID`))
;

-- -----------------------------------------------------
-- Table `bsi`.`spreading_transaction_data`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bsi`.`spreading_transaction_data` (
  `STD_ID` INT(11) NOT NULL AUTO_INCREMENT,
  `REF_SSD_ID` INT(11) DEFAULT NULL,
  `ACCOUNT_NUMBER` VARCHAR(100) NULL DEFAULT NULL,
  `TRANSACTION_ID` VARCHAR(100) NULL DEFAULT NULL,
  `TRANSACTION_DATE` DATE NOT NULL ,
  `DESCRIPTION` VARCHAR(850) NULL DEFAULT NULL,
  `CHECK_NUMBER` VARCHAR(100) NULL DEFAULT NULL,
  `TRANSACTION_AMOUNT` DOUBLE NULL DEFAULT NULL,
  `TRANSACTION_CURRENCY_CODE` VARCHAR(10) NULL DEFAULT NULL,
  `POSTED_ORDER` VARCHAR(100) NULL DEFAULT NULL,
  `AVAILABLE_BALANCE` DOUBLE NULL DEFAULT NULL,
  `CREDIT_OR_DEBIT` VARCHAR(20) NULL DEFAULT NULL,
  CREATED_DATE DATETIME ,
  CREATED_BY VARCHAR(50),
  UPDATED_DATE DATETIME ,
  UPDATED_BY VARCHAR(50),
  PRIMARY KEY (`STD_ID`),
  CONSTRAINT `spreading_transaction_data_ibfk_1`
    FOREIGN KEY (`REF_SSD_ID`)
    REFERENCES `bsi`.`spreading_summary_data` (`SSD_ID`))
;

CREATE TABLE IF NOT EXISTS bsi.SPREADING_REQUEST_DATA (
	SRD_ID INT NOT NULL AUTO_INCREMENT,
	client_app_id VARCHAR(120),
	correlation_id VARCHAR(120),
	general_comments VARCHAR(800),
	respreading_indicator VARCHAR(20),
	respreading_comment VARCHAR(800),
	request_date VARCHAR(20),
	client_platform VARCHAR(120),
	owning_system_name VARCHAR(120),
	request_timestamp VARCHAR(20),
	company_id VARCHAR(120),
	corporate_id VARCHAR(120),
	account_number_company VARCHAR(120),
	region VARCHAR(120),
	ticker_symbol VARCHAR(120),
	state_company VARCHAR(120),
	count_of_documents VARCHAR(20),
	city_company VARCHAR(120),
	address_line1_company VARCHAR(200),
	company_name VARCHAR(200),
	country_company VARCHAR(120),
	industry_code_classification VARCHAR(120),
	industry_code VARCHAR(120),
	customer_id VARCHAR(120),
	country_customer VARCHAR(120),
	state_customer VARCHAR(120),
	account_number_customer VARCHAR(120),
	product_type VARCHAR(120),
	city_customer VARCHAR(120),
	address_line1_customer VARCHAR(200),
	customer_name VARCHAR(200),
	process_control_number VARCHAR(120),
	prospect_id VARCHAR(120),
	channel_indicator VARCHAR(120),
	market_code VARCHAR(120),
	usecase_id VARCHAR(120),
	requesting_bu VARCHAR(120),
	PRIMARY KEY (SRD_ID)
);

CREATE TABLE IF NOT EXISTS bsi.SPREADING_DOCUMENT_INFORMATION (
	DOC_ID INT NOT NULL AUTO_INCREMENT,
	REF_SRD_ID INT NOT NULL,
	document_name VARCHAR(120),
	document_id VARCHAR(120),
	files_resource_id VARCHAR(120),
	document_resource_id VARCHAR(120),
	document_url VARCHAR(400),
	document_type VARCHAR(120),
	comments VARCHAR(800),
	respreading_instruction VARCHAR(800),
	PRIMARY KEY (DOC_ID),
	CONSTRAINT doc_info_fk_1 FOREIGN KEY (REF_SRD_ID) REFERENCES bsi.SPREADING_REQUEST_DATA (SRD_ID)
);

CREATE TABLE IF NOT EXISTS bsi.SPREADING_RESPONSE_DATA (
	SP_RESPONSE_ID INT NOT NULL AUTO_INCREMENT,
	REF_SRD_ID INT,
	client_app_id VARCHAR(120),
	response_id VARCHAR(120),
	response_timestamp VARCHAR(20),
	response_code VARCHAR(5),
	PRIMARY KEY (SP_RESPONSE_ID)
);


CREATE TABLE IF NOT EXISTS `bsi`.`urs_io_json_details` (
  `URS_IO_JSON_ID` INT NOT NULL AUTO_INCREMENT,
  `CORRELATION_ID` INT NULL DEFAULT NULL,
  `TO_entity` VARCHAR(50) NULL DEFAULT NULL,
  `FROM_entity` VARCHAR(50) NULL DEFAULT NULL,
  `RETRY_COUNT` INT NULL DEFAULT NULL,
  `REQUEST_JSON` MEDIUMTEXT NULL DEFAULT NULL,
  `RESPONSE_JSON` MEDIUMTEXT NULL DEFAULT NULL,
  `RESPONSE_CODE` VARCHAR(50) NULL DEFAULT NULL,
  PRIMARY KEY (`URS_IO_JSON_ID`));
  
  CREATE TABLE IF NOT EXISTS bsi.SPREADING_RESPONSE_FAILURE (
	SRF_ID INT NOT NULL AUTO_INCREMENT,
	REF_SPR_ID INT,
	correlation_id VARCHAR(120),
	input_json VARCHAR(2000),
	PRIMARY KEY (SRF_ID),
	CONSTRAINT spr_resp_fail_fk_1 FOREIGN KEY (REF_SPR_ID) REFERENCES bsi.SPREADING_RESPONSE_DATA (SP_RESPONSE_ID)
);


-- -----------------------------------------------------
-- Table `bsi`.`STAGING_TXN_LEVEL_DETAILS`
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS bsi.STAGING_TXN_LEVEL_DETAILS (
	TXN_LEVEL_ID INT NOT NULL AUTO_INCREMENT,
	SE10 VARCHAR(100),
	CONTRACT_NBR VARCHAR(100),
	AMORT_DATE VARCHAR(20),
	INSTANT_DECISION_DATE VARCHAR(100),
	ACCOUNT_NUM VARCHAR(100),
	TXN_ID VARCHAR(100),
	DESCRIPTION VARCHAR(850),
	CHECK_NUM VARCHAR(100),
	TXN_DATE VARCHAR(20),
	TXN_AMOUNT VARCHAR(100),
	CURRENCY VARCHAR(10),
	DEBIT_CREDIT VARCHAR(100),
	AVAILABLE_BALANCE VARCHAR(100),
	CREATED_DATE DATETIME,
	BATCH_ID VARCHAR(60),
	PRIMARY KEY (TXN_LEVEL_ID)
);

-- -----------------------------------------------------
-- Table `bsi`.`STAGING_SUMMARY_LEVEL_DETAILS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS bsi.STAGING_SUMMARY_LEVEL_DETAILS (
	SUMMARY_ID INT NOT NULL AUTO_INCREMENT,
	SE10 VARCHAR(100),
	CONTRACTNBR VARCHAR(100),
	AMORT_DATE VARCHAR(20),
	INSTANT_DECISION_DATE VARCHAR(100),
	ACCOUNT_NUM VARCHAR(100),
	ACCTHOLDERNAME VARCHAR(100),
	ACCTTYPE VARCHAR(100),
	ACCTOWNERSHIP VARCHAR(100),
	NAMEOFBANK VARCHAR(200),
	BANK_ADDRESS VARCHAR(400),
	BANK_CITY VARCHAR(100),
	BANK_STATE VARCHAR(100),
	BANK_ZIP VARCHAR(100),
	CURRENT_BALANCE VARCHAR(100),
	STARTDATE VARCHAR(20),
	ENDDATE VARCHAR(20),
	OPENBALANCE VARCHAR(100),
	CLOSINGBALANCE VARCHAR(100),
	TOTAL_DOLLAR_DEPOSITS VARCHAR(100),
	TOTAL_NUM_DEPOSITS VARCHAR(100),
	TOTAL_DOLLAR_WITHDRAWALS VARCHAR(100),
	TOTAL_NUM_WITHDRAWALS VARCHAR(100),
	TOTAL_NUMOFCHECKRETURNS VARCHAR(100),
	TOTAL_NUM_INWARD_CHECK_RETURN VARCHAR(100),
	TOTAL_DOLLAR_INWARD_CHECK_RETURN VARCHAR(100),
	TOTAL_NUM_OUTWARD_CHECK_RETURN VARCHAR(100),
	TOTAL_DOLLAR_OUTWARD_CHECK_RETURN VARCHAR(100),
	COUNT_ECSOR_EMI_MONTHLY VARCHAR(100),
	AMOUNT_ECSOR_EMI_MONTHLY VARCHAR(100),
	ROUTE_NUM VARCHAR(100),
	TRANSACTIONALLEVEL_SPREADING_DONE  VARCHAR(100),
	NATIVEVS_NONNATIVE VARCHAR(100),
	CHECKSUM VARCHAR(100),
	SUMMARY_AND_TRANSACTION_MATCH VARCHAR(100),
	CREATED_DATE DATETIME,
	BATCH_ID VARCHAR(60),
	PRIMARY KEY (SUMMARY_ID)
);